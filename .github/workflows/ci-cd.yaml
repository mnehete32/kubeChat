name: Component-based Docker Build and Push
on:
  push:
    branches:
      - master



jobs:
  build_and_push_components:
    runs-on: [self-hosted, macOS, ARM64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Data Preparation Component ---
      - name: Build and Push Download Dataset Docker Image
        run: |
          docker build -f components/download_dataset/Dockerfile -t mlops-download-dataset:${{ github.sha }} .
          # docker push mlops-download-dataset:${{ github.sha }}

      # --- Data Preparation Component ---
      - name: Build and Push Data Preparation Docker Image
        run: |
          docker build -f components/data_prep/Dockerfile -t mlops-data-preparation:${{ github.sha }} .
          # docker push mlops-data-preparation:${{ github.sha }}

      # --- Train Test Split Component ---
      - name: Build and Push Train Test Split Docker Image
        run: |
          docker build -f components/train_test_split/Dockerfile -t mlops-train-test-split:${{ github.sha }} .
          # docker push mlops-train-test-split:${{ github.sha }}

      # --- Training Component ---
      - name: Build and Push Training Docker Image
        run: |
          docker build -f components/training/Dockerfile -t mlops-training:${{ github.sha }} .
          # docker push mlops-training:${{ github.sha }}
      
      # --- Testing Component ---
      - name: Build and Push Testing Docker Image
        run: |
          docker build -f components/testing/Dockerfile -t mlops-testing:${{ github.sha }} .
          # docker push mlops-testing:${{ github.sha }}


  run_pipeline:
    needs: build_and_push_components
    runs-on: [self-hosted, linux, x64]
    container: python:3.11.4-slim-buster
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3
    # - name: Create kubernetes resources and run pipeline
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: 3.11

    - name: Install Python dependencies
      run: |
          pip install -r 'requirements.txt'
    - name: Create Kubernetes resources
      run: |
          kubectl apply -k ./kube/
    - name: Run Pipeline
      run: |
          python pipeline.py --commit_sha_tag ${{ github.sha }}
    - name: Exit Container
      run: |
          exit
      