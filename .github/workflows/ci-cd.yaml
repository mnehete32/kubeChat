name: Component-based Docker Build and Push
on:
  push:
    branches:
      - master

jobs:
  build_and_push_components:
    runs-on: [self-hosted, macOS, ARM64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check for changes in component folders
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            eda:
              - 'components/eda/**'
              - 'requirements.txt'
            data_preparation:
              - 'components/data_prep/**'
              - 'requirements.txt'
            data_validation:
              - 'components/data_val/**'
              - 'components/metrics_evaluation/**'
              - 'requirements.txt'
            train_test_split:
              - 'components/train_test_split/**'
              - 'requirements.txt'

      # --- EDA Component ---
      - name: Build and Push EDA Docker Image
        if: steps.filter.outputs.eda == 'true'
        run: |
          docker build -f components/eda/Dockerfile -t mlops-data-pipeline-eda:${{ github.sha }} .
          docker push mlops-data-pipeline-eda:${{ github.sha }}

      # --- Data Preparation Component ---
      - name: Build and Push Data Preparation Docker Image
        if: steps.filter.outputs.data_preparation == 'true'
        run: |
          docker build -f components/data_preparation/Dockerfile -t mlops-data-pipeline-data-preparation:${{ github.sha }} .
          docker push mlops-data-pipeline-data-preparation:${{ github.sha }}

      # --- Data Validation Component ---
      - name: Build and Push Data Validation Docker Image
        if: steps.filter.outputs.data_validation == 'true'
        run: |
          docker build -f components/data_validation/Dockerfile -t mlops-data-pipeline-data-validation:${{ github.sha }} .
          docker push mlops-data-pipeline-data-validation:${{ github.sha }}


      # --- Data Validation Component ---
      - name: Build and Push Data Validation Docker Image
        if: steps.filter.outputs.train_test_split == 'true'
        run: |
          docker build -f components/train_test_split/Dockerfile -t mlops-data-pipeline-train-test-split:${{ github.sha }} .
          docker push mlops-data-pipeline-train-test-split:${{ github.sha }}